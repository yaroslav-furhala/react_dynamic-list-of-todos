{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodoID","onTodoSelect","className","map","todo","id","title","completed","isSelected","classNames","type","onClick","TodoFilter","filter","onFilterSelect","onQueryChange","searchQuery","value","onChange","target","All","Active","Completed","placeholder","style","pointerEvents","Boolean","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","useState","isUserLoaded","setIsUserLoaded","user","setUser","userId","useEffect","getUser","userFromServer","href","email","name","App","isDataLoaded","setIsDataLoaded","initialTodos","setInitialTodos","setTodos","selectedTodo","setSelectedTodo","setFilter","setSearchQuery","todosFromServer","prevTodos","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f1518ec.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoID: number,\n  onTodoSelect: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoID,\n  onTodoSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n          const isSelected = selectedTodoID === id;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={classNames({\n                'has-background-info-light': isSelected,\n              })}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onTodoSelect(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames(\n                        'far',\n                        {\n                          'fa-eye': !isSelected,\n                          'fa-eye-slash': isSelected,\n                        },\n                      )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter,\n  onFilterSelect: (value: Filter) => void,\n  searchQuery: string,\n  onQueryChange: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  onFilterSelect,\n  onQueryChange,\n  searchQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={({ target }) => onFilterSelect(target.value as Filter)}\n        >\n          <option value={Filter.All}>All</option>\n          <option value={Filter.Active}>Active</option>\n          <option value={Filter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={searchQuery}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={({ target }) => onQueryChange(target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {Boolean(searchQuery) && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onClose: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [isUserLoaded, setIsUserLoaded] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId).then((userFromServer) => {\n      setUser(userFromServer);\n      setIsUserLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserLoaded\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => onClose(null)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      setInitialTodos(todosFromServer);\n      setTodos(todosFromServer);\n      setIsDataLoaded(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    switch (filter) {\n      case Filter.All:\n        setTodos(initialTodos);\n        break;\n\n      case Filter.Active:\n        setTodos(initialTodos.filter(todo => !todo.completed));\n        break;\n\n      case Filter.Completed:\n        setTodos(initialTodos.filter(todo => todo.completed));\n        break;\n\n      default:\n        break;\n    }\n\n    setTodos(\n      prevTodos => prevTodos.filter(\n        todo => todo.title.toLowerCase().includes(searchQuery.toLowerCase()),\n      ),\n    );\n  }, [filter, searchQuery]);\n\n  const handleTodoSelect = (todo: Todo | null) => (\n    setSelectedTodo(todo)\n  );\n\n  const handleFilterSelect = (value: Filter) => {\n    setFilter(value);\n  };\n\n  const handleQueryChange = (value: string) => {\n    setSearchQuery(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                onFilterSelect={handleFilterSelect}\n                searchQuery={searchQuery}\n                onQueryChange={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isDataLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    onTodoSelect={handleTodoSelect}\n                    selectedTodoID={selectedTodo?.id || 0}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}